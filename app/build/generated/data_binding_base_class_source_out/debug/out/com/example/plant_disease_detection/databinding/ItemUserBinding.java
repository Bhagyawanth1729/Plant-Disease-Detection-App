// Generated by view binder compiler. Do not edit!
package com.example.plant_disease_detection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.plant_disease_detection.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView tvJoinDate;

  @NonNull
  public final TextView tvLastLogin;

  @NonNull
  public final TextView tvRole;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final TextView tvUserEmail;

  @NonNull
  public final TextView tvUserName;

  private ItemUserBinding(@NonNull MaterialCardView rootView, @NonNull TextView tvJoinDate,
      @NonNull TextView tvLastLogin, @NonNull TextView tvRole, @NonNull TextView tvStatus,
      @NonNull TextView tvUserEmail, @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.tvJoinDate = tvJoinDate;
    this.tvLastLogin = tvLastLogin;
    this.tvRole = tvRole;
    this.tvStatus = tvStatus;
    this.tvUserEmail = tvUserEmail;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvJoinDate;
      TextView tvJoinDate = ViewBindings.findChildViewById(rootView, id);
      if (tvJoinDate == null) {
        break missingId;
      }

      id = R.id.tvLastLogin;
      TextView tvLastLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLastLogin == null) {
        break missingId;
      }

      id = R.id.tvRole;
      TextView tvRole = ViewBindings.findChildViewById(rootView, id);
      if (tvRole == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.tvUserEmail;
      TextView tvUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvUserEmail == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new ItemUserBinding((MaterialCardView) rootView, tvJoinDate, tvLastLogin, tvRole,
          tvStatus, tvUserEmail, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
